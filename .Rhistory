activity <- read.csv(unz("activity.zip", "activity.csv"))
dim(activity)
View(activity)
names(activity)
with(activity, hist(steps))
with(activity, hist(steps, rm.na = TRUE))
with(activity, hist(!is.na(steps))
with(activity, hist(!is.na(steps)))
table(activity$steps)
summary(activity$steps)
names(activity)
colMeans(is.na(activity))
with(activity, hist(steps))
with(activity, hist(!is.na(steps))
with(activity, hist(!is.na(steps)))
with(activity, hist(steps))
hist(!is.na(activity$steps))
truehist(activity$steps)
hist(activity$steps)
View(activity)
dim(activity)
names(activity)
colMeans(is.na(activity))
str(activity$steps)
str(activity$steps)
summary(activity$steps)
boxplot(activity$steps)
boxplot(log10(activity$steps + 1))
class(activity)
class(colnames(activity))
hist(na.omit(activity$steps))
lapply(activity, class)
sapply(activity, class)
activity$date <- as.Date(activity$date, format = "%y %m %d")
sapply(activity, class)
hist(na.omit(activity$steps))
library(zoo)
unique(activity$date)
activity <- read.csv(unz("activity.zip", "activity.csv"))
activity$date <- as.Date(activity$date, format = "%y/%m/%d")
activity <- read.csv(unz("activity.zip", "activity.csv"))
activity$date <- as.Date(activity$date, format = "%Y/%m/%d")
activity <- read.csv(unz("activity.zip", "activity.csv"))
activity$date <- as.Date(activity$date, format = "%Y/%m/%d")
activity <- read.csv(unz("activity.zip", "activity.csv"))
activity$date <- as.Date(activity$date, format = "%Y-%m-%d")
sapply(activity, class)
table(unique(activity$date))
plot(table(unique(activity$date)))
hist(table(unique(activity$date)))
barplot(table(unique(activity$date)))
table(unique(activity$date))
count(activity$date)
sum(activity$date)
sum(unique(activity$date))
length(unique(activity$date))
length(unique(diff(activity$date)))
is.regular(activity$date)
activity$zoo_date <- with(activity, zoo(steps, date))
hist(na.omit(activity$steps))
aggregate(steps ~ date, data = activity, FUN = sum)
hist(aggregate(steps ~ date, data = activity, FUN = sum)
hist(aggregate(steps ~ date, data = activity, FUN = sum))
steps_day <- aggregate(steps ~ date, data = activity, FUN = sum)
steps_day
hist(steps_day)
hist(as.numeric(steps_day))
View(steps_day)
hist(steps_day$steps)
aggregate(steps ~ date, data = activity, FUN = mean)
aggregate(steps ~ date, data = activity, FUN = median)
rm(activity$zoo_date)
rm("activity$zoo_date")
activity$zoo_date)
activity$zoo_date <- NULL
install.packages("xtable")
install.packages("xtable")
library(xtable)
```{r, results = "asis"}
```{r showtable, results = "asis"}
steps_day <- xtable(aggregate(steps ~ date, data = activity, FUN = sum))
print(steps_day, type = "html")
print(steps_day$steps, type = "html")
steps_day <- xtable(aggregate(steps ~ date, rm.na = TRUE, data = activity, FUN = sum))
steps_day <- xtable(aggregate(steps ~ date, rm.na = TRUE, data = activity, FUN = sum))
print(steps_day$steps, type = "html")
hist(steps_day$steps)
aggregate(steps ~ date, data = activity, FUN = mean)
aggregate(steps ~ date, data = activity, FUN = median)
aggregate(steps ~ date, data = activity, rm.na = TRUE, FUN = median)
aggregate(!is.na(steps) ~ date, data = activity, FUN = mean)
aggregate(steps ~ date, data = activity, FUN = mean)
aggregate(steps ~ date, data = activity, FUN = median)
```{r, results="hide"}
print(steps_day)
steps_day
print(steps_day)
steps_day
colMeans(is.na(activity$steps))
colMeans(is.na(activity))
steps_day <- aggregate(steps ~ date, rm.na = TRUE, data = activity, FUN = sum))
steps_day <- aggregate(steps ~ date, rm.na = TRUE, data = activity, FUN = sum)
q
q()
library(zoo)
activity$zoo_steps <- zoo(activity$steps, activity$interval)
zoo_steps
activity$zoo_steps
plot(activity$zoo_steps)
plot(activity$zoo_steps, type = "l")
plot(aggregate(steps ~ date, data = activity, FUN = mean), type = "l")
plot(aggregate(steps ~ interval, data = activity, FUN = mean), type = "l")
activity$zoo_steps <- NULL
?seq()
hist(steps_day$steps, xaxt = "n")
axis(1, at = seq(0, 53, by = 288))
axis(1, at = seq(0, 53, by = 288), las = 2)
hist(steps_day$steps, xaxt = "n")
axis(1, c(0, 288), c("Day1", "Day2"))
axis(1, at = seq(0, 53, by = 288), las = 2)
?hist()
hist(steps_day$steps, xaxt = "n", breaks = 53)
hist(steps_day$steps, xaxt = "n", breaks = 53, xlab = "Days")
hist(steps_day$steps, xaxt = "n", breaks = 53, xlab = "Days", ylab = Number of steps)
hist(steps_day$steps, xaxt = "n", breaks = 53, xlab = "Days", ylab = "Number of steps")
sum(unique(is.regular(activity$date)))
unique(is.regular(activity$date))
sum(unique(activity$date))
unique(activity$date)
hist(steps_day$steps, xaxt = "n", breaks = 61, xlab = "Days", ylab = "Number of steps")
hist(steps_day$steps, breaks = 61, xlab = "Days", ylab = "Number of steps")
hist(steps_day, breaks = 61, xlab = "Days", ylab = "Number of steps")
hist(as.numeric(steps_day), breaks = 61, xlab = "Days", ylab = "Number of steps")
hist(na.omit(steps_day$steps), xaxt = "n", breaks = 61, xlab = "Days", ylab = "Number of steps")
hist(na.omit(steps_day$steps), xaxt = "n", breaks = 61, xlab = "Days", ylab = "Number of steps")
hist(aggregate(steps ~ date, rm.na = TRUE, data = activity, FUN = sum))
hist(as.numeric(aggregate(steps ~ date, rm.na = TRUE, data = activity, FUN = sum)))
axis(1, at = seq(0, 61, by = 1))
axis(1, xaxp = c(0, 61, 1))
hist(steps_day$steps, yayt = "n", xaxt = "n", breaks = 61, xlab = "Days", ylab = "Number of steps")
hist(steps_day$steps, yaxt = "n", xaxt = "n", breaks = 61, xlab = "Days", ylab = "Number of steps")
hist(steps_day$steps, xaxt = "n", breaks = 61, xlab = "Days", ylab = "Number of steps")
plot(steps_day)
hist(plot(steps_day))
plot(steps_day, type = "h")
plot(steps_day, type = "h", lwd = 10)
plot(steps_day, type = "h", lwd = 2)
plot(steps_day, type = "h", lwd = 3)
plot(steps_day, type = "h", lwd = 3, lend = square)
plot(steps_day, type = "h", lwd = 3, lend = "square")
plot(steps_day, type = "h", lwd = 4, lend = "square")
plot(steps_day, type = "h", lwd = 10, lend = "square")
plot(aggregate(steps ~ interval, data = activity, FUN = mean), type = "l")
max(aggregate(steps ~ interval, data = activity, FUN = sum))
max(activity$steps, na.rm = TRUE)
q()
sum(is.na(activity))
sapply(is.ns(activity), sum)
sapply(is.na(activity), sum)
activity2 <- activity
activity2$steps[is.na(activity$steps)] <- aggregate(steps ~ date, data = activity, FUN = median)
View(activity2)
aggregate(steps ~ date, data = activity, FUN = median)
median(activity$steps)
mean(activity$steps)
activity <- read.csv(unz("activity.zip", "activity.csv"))
activity2 <- activity
mean(activity$steps)
median(activity$steps)
median(na.omit(activity$steps))
mean(na.omit(activity$steps))
activity2$steps[is.na(activity$steps)] <- mean(na.omit(activity$steps))
activity <- read.csv(unz("activity.zip", "activity.csv"))
View(activity2)
plot(aggregate(steps ~ interval, data = activity2, FUN = mean), type = "l")
plot(steps_day, type = "h", lwd = 10, lend = "square")
mfrow(2, 1)
par(mfrow = c(2, 1))
steps_day2 <- aggregate(steps ~ date, rm.na = TRUE, data = activity2, FUN = sum)
par(mfrow = c(2, 1))
plot(steps_day, type = "h", lwd = 10, lend = "square", main = "With NAs")
plot(steps_day2, type = "h", lwd = 10, lend = "square", main = "NAs filled")
par(mfrow = c(1, 2))
plot(steps_day, type = "h", lwd = 10, lend = "square", main = "With NAs")
plot(steps_day2, type = "h", lwd = 10, lend = "square", main = "NAs filled")
View(steps_day2)
dev.off()
plot(steps_day2, type = "h", lwd = 10, lend = "square", main = "NAs filled")
plot(steps_day2, type = "l", lwd = 10, lend = "square", main = "NAs filled")
plot(steps_day2, type = "l", lwd = 10, lend = "square", main = "NAs filled")
plot(steps_day2, type = "p", lwd = 10, lend = "square", main = "NAs filled")
hist(steps_day2)
plot(steps_day2)
plot(steps_day2, type = "h")
sapply(activity2, class)
activity2$date <- as.Date(activity2$date, format = "%Y-%m-%d")
plot(steps_day2, type = "h")
steps_day2 <- aggregate(steps ~ date, rm.na = TRUE, data = activity2, FUN = sum)
par(mfrow = c(1, 2))
plot(steps_day, type = "h", lwd = 10, lend = "square", main = "With NAs")
plot(steps_day2, type = "h", lwd = 10, lend = "square", main = "NAs filled")
plot(steps_day2, type = "h", lwd = 8, color = "blue" lend = "square", main = "NAs filled")
plot(steps_day, type = "h", lwd = 8, color = "red", lend = "square", main = "With NAs")
plot(steps_day2, type = "h", lwd = 8, color = "red" lend = "square", main = "NAs filled")
plot(steps_day, type = "h", lwd = 8,lend = "square", main = "With NAs")
plot(steps_day2, type = "h", lwd = 8, lend = "square", main = "NAs filled")
dev.off()
par(mfrow = c(1, 2))
plot(steps_day, type = "h", lwd = 8,lend = "square", main = "With NAs")
plot(steps_day2, type = "h", lwd = 8, lend = "square", main = "NAs filled")
lines(density(activity$steps))
lines(density(na.omit(activity$steps)))
lines(density(activity2$steps))
library(zoo)
"zoo" %in% row.names(installed.packages())
install.packages("zoo")
library(zoo)
suppressWarnings(library(zoo))
plot(steps_day2, type = "h", lwd = 8,lend = "square")
dev.off()
abline(h = seq(0, 20000, 2500))
par(mfrow = c(1, 2))
plot(steps_day, type = "h", lwd = 8,lend = "square", main = "With NAs")
abline(h = seq(0, 20000, 2500))
abline(h = seq(0, 20000, 2500), lty = "dashed")
par(mfrow = c(1, 2))
dev.off()
par(mfrow = c(1, 2))
plot(steps_day, type = "h", lwd = 8,lend = "square", main = "With NAs")
abline(h = seq(0, 20000, 2500), lty = "dashed")
abline(h = seq(0, 20000, 2500), lty = "dashed", col = "withe")
dev.off()
par(mfrow = c(1, 2))
plot(steps_day, type = "h", lwd = 8,lend = "square", main = "With NAs")
abline(h = seq(0, 20000, 2500), lty = "dashed", col = "withe")
dev.off()
par(mfrow = c(1, 2))
plot(steps_day, type = "h", lwd = 5,lend = "square", main = "With NAs")
abline(h = seq(0, 20000, 2500), lty = "dashed", col = "withe")
dev.off()
par(mfrow = c(1, 2))
plot(steps_day, type = "h", lwd = 5,lend = "square", main = "With NAs")
abline(h = seq(0, 20000, 2500), lty = "dashed")
plot(steps_day2, type = "h", lwd = 8, lend = "square", main = "NAs filled")
dev.off()
par(mfrow = c(1, 2))
plot(steps_day, type = "h", lwd = 5,lend = "square", main = "With NAs")
abline(h = seq(0, 20000, 2500), lty = "dashed")
plot(steps_day2, type = "h", lwd = 5, lend = "square", main = "NAs filled")
abline(h = seq(0, 20000, 2500), lty = "dashed")
```{r}
aggregate(steps ~ date, data = activity, FUN = mean)
aggregate(steps ~ date, data = activity, FUN = median)
aggregate(steps ~ date, data = activity2, FUN = mean)
aggregate(steps ~ date, data = activity2, FUN = median)
weekdays(activity2)
weekdays(activity2$date)
weekdays(unique(activity2$date))
activity2$weekday <- factor(format(activity2$date, "%A"))
levels(activity2$weekday) <- list(weekday = c("Monday", "Tuesday",
"Wednesday", "Thursday",
"Friday"), weekend =
c("Saturday", "Sunday"))
levels(activity2$weekday) <- list(week = c("Monday", "Tuesday",
"Wednesday", "Thursday",
"Friday"), end =
c("Saturday", "Sunday"))
levels(activity2$weekday) <- list(weekday = c("Monday", "Tuesday",
"Wednesday", "Thursday",
"Friday"), weekend =
c("Saturday", "Sunday"))
levels(activity2$weekday) <- NULL
activity2$weekday <- NULL
activity2$weekday <- factor(format(activity2$date, "%A"))
levels(activity2$weekday) <- list(weekday = c("Monday", "Tuesday",
"Wednesday", "Thursday",
"Friday"), weekend =
c("Saturday", "Sunday"))
plot(activity2$steps[activity2$weekday == "weekday"])
plot(activity2$steps[activity2$weekday == "weekday"], type = "l")
dev.off()
par(mfrow = c(2, 1))
plot(activity2$steps[activity2$weekday == "weekday"], type = "l")
plot(activity2$steps[activity2$weekday == "weekend"], type = "l")
plot(aggregate(activity2$steps[activity2$weekday == "weekday"] ~ weekday, FUN = mean), type = "l")
plot(aggregate(activity2$steps[activity2$weekday == "weekday"] ~ weekday, data = activity2, FUN = mean), type = "l")
plot(aggregate(steps ~ date, data = activity, FUN = mean))
plot(aggregate(steps ~ date, data = activity, FUN = mean), type = "l")
plot(aggregate(steps ~ weekday[weekday == "weekday"], data = activity2, FUN = mean), type = "l")
plot(aggregate(steps ~ weekday, data = activity2, FUN = mean), type = "l")
plot(aggregate(steps ~ weekday, data = activity2, FUN = mean), type = "l")
plot(steps ~ weekday, data = activity2, FUN = mean, type = "l")
dev.off()
par(mfrow = c(2, 1))
plot(activity2$steps[activity2$weekday == "weekday"], type = "l")
plot(activity2$steps[activity2$weekday == "weekend"], type = "l")
plot(mean(activity2$steps[activity2$weekday == "weekday"]), type = "l")
dev.off()
plot(aggregate(steps ~ weekday[weekday == "weekday"], data = activity, FUN = mean))
plot(aggregate(steps ~ weekday[weekday == "weekday"], data = activity2, FUN = mean))
plot(aggregate(steps ~ weekday[weekday == "weekend"], data = activity2, FUN = mean))
plot(aggregate(steps ~ weekday, data = activity2, FUN = mean))
plot(aggregate(steps ~ interval, data = activity2, FUN = mean), type = "l")
plot(aggregate(steps ~ weekday, data = activity2, FUN = mean), type = "l")
plot(aggregate(steps ~ interval[weekday == "weekday"], data = activity2, FUN = mean), type = "l")
coplot(aggregate(steps ~ interval | weekday, data = activity2, FUN = mean), type = "l")
coplot(aggregate(steps ~ interval | weekday, data = activity2, FUN = mean))
coplot(aggregate(steps ~ interval) | weekday, data = activity2, FUN = mean))
coplot(aggregate(steps ~ interval, data = activity2, FUN = mean) | weekday, ddata = activity2)
coplot(aggregate(steps ~ interval, data = activity2, FUN = mean) | weekday, data = activity2)
names(activity2)
coplot(aggregate(steps ~ interval, data = activity2, FUN = mean) | weekday, data = activity2)
coplot(steps ~ interval | weekday, data = activity2)
dev.off()
coplot(steps ~ interval | weekday, data = activity2)
dev.off()
dev.off()
dev.off()
coplot(steps ~ interval | weekday, data = activity2)
coplot(mean(steps ~ interval) | weekday, data = activity2)
steps_day2$weekday <- factor(format(activity2$date, "%A"))
steps_day2$weekday <- factor(format(steps_day2$date, "%A"))
coplot(aggregate(steps ~ interval, data = activity, FUN = mean) | weekday, data = activity2)
coplot(aggregate(steps ~ interval, data = activity2, FUN = mean) | weekday, data = activity2)
coplot(aggregate(activity$2steps ~ activity$2interval, FUN = mean) | weekday, data = activity2)
coplot(aggregate(activity2$steps ~ activity2$interval, FUN = mean) | weekday, data = activity2)
coplot(aggregate(activity2$steps ~ activity2$interval, FUN = mean) | weekday, data = activity2)
coplot(steps ~ interval | weekday, data = activity2)
dev.off()
coplot(steps ~ interval | weekday, data = activity2)
meansteps <- aggregate(steps ~ interval, data = activity, FUN = mean)
plot(meansteps)
plot(meansteps, activity2$weekday)
dev.off()
plot(meansteps, activity2$weekday)
meansteps <- aggregate(steps ~ interval, data = activity2, FUN = mean)
dev.off()
meansteps <- aggregate(steps ~ interval, data = activity2, FUN = mean)
plot(meansteps)
coplot(aggregate(steps ~ interval, data = activity2, FUN = mean) ~ interval | weekday, data = activity2)
?mean()
coplot(steps ~ interval | weekday, data = activity2)
coplot(aggregate(steps ~ interval, data = activity2, FUN = mean) | weekday, data = activity2)
plot(aggregate(steps ~ interval, data = activity, FUN = mean), type = "l")
with(activity2[activity2$weekday == "weekend", ], plot(aggregate(steps ~ interval, data = activity, FUN = mean), type = "l"))
dev.off()
with(activity2[activity2$weekday == "weekend", ], plot(aggregate(steps ~ interval, data = activity, FUN = mean), type = "l"))
par(mfrow = c(2, 1))
dev.off()
par(mfrow = c(2, 1))
with(activity2[activity2$weekday == "weekend", ], plot(aggregate(steps ~ interval, data = activity, FUN = mean), type = "l"))
with(activity2[activity2$weekday == "weekday", ], plot(aggregate(steps ~ interval, data = activity, FUN = mean), type = "l"))
dev.off()
par(mfrow = c(2, 1))
with(activity2[activity2$weekday == "weekend", ], plot(aggregate(steps ~ interval, data = activity2, FUN = mean), type = "l"))
with(activity2[activity2$weekday == "weekday", ], plot(aggregate(steps ~ interval, data = activity2, FUN = mean), type = "l"))
dev.off()
with(activity2[activity2$weekday == "weekend"], plot(aggregate(steps ~ interval, data = activity2, FUN = mean), type = "l"))
with(activity2[activity2$weekday == "weekend",], plot(aggregate(steps ~ interval, data = activity2, FUN = mean), type = "l"))
with(activity2[activity2$weekday == "weekday", ], plot(aggregate(steps ~ interval, data = activity2, FUN = mean), type = "l"))
levels(activity2$weekday)
table(activity2$weekday)
dev.off()
with(activity2[activity2$weekday == weekend,], plot(aggregate(steps ~ interval, data = activity2, FUN = mean), type = "l"))
with(activity2[activity2$weekday == "weekend",], plot(aggregate(steps ~ interval, data = activity2, FUN = mean), type = "l"))
with(activity2[activity2$weekday == weekday,], plot(aggregate(steps ~ interval, data = activity2, FUN = mean), type = "l"))
with(activity2[activity2$weekday == "weekday",], plot(aggregate(steps ~ interval, data = activity2, FUN = mean), type = "l"))
with(activity2[activity2$weekday = "weekend",], plot(aggregate(steps ~ interval, data = activity2, FUN = mean), type = "l"))
with(activity2[activity2$weekday == "weekend",], plot(aggregate(steps ~ interval, FUN = mean), type = "l"))
with(activity2[activity2$weekday == "weekday",], plot(aggregate(steps ~ interval, FUN = mean), type = "l"))
par(mfrow = c(2, 1))
with(activity2[activity2$weekday == "weekend",], plot(aggregate(steps ~ interval, FUN = mean), type = "l"))
with(activity2[activity2$weekday == "weekday",], plot(aggregate(steps ~ interval, FUN = mean), type = "l"))
dev.off()
par(mfrow = c(2, 1))
with(activity2[activity2$weekday == "weekend",], plot(aggregate(steps ~ interval, FUN = mean), type = "l", main = "Weekends"))
with(activity2[activity2$weekday == "weekday",], plot(aggregate(steps ~ interval, FUN = mean), type = "l", main = "Weekdays"))
q()
